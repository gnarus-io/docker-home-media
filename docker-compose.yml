version: "2"

services:
    wait-for-config:
        build: wait-for-file
        container_name: wait-for-config
        volumes:
            - /etc/host:/wait
        command: /wait/ready

    wait-for-data:
        build: wait-for-file
        container_name: wait-for-data
        volumes:
            - /var/host:/wait
        command: /wait/ready

    nzbget:
        image: linuxserver/nzbget
        container_name: sabnzbd
        environment:
            - PUID=0
            - PGID=0
        volumes:
            - /etc/host/nzbget:/config
            - /var/host/downloads:/downloads
        ports:
            - 6789:6789
        restart: unless-stopped
        depends_on:
            - wait-for-config
            - wait-for-data

    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        environment:
            - PUID=0
            - PGID=0
        volumes:
            - /etc/host/sonarr:/config
            - /var/host/tv:/tv
            - /var/host/downloads:/downloads
        ports:
            - 8989:8989
        restart: unless-stopped
        depends_on:
            - wait-for-config
            - wait-for-data

    radarr:
        image: linuxserver/radarr
        container_name: radarr
        environment:
            - PUID=0
            - PGID=0
        volumes:
            - /etc/host/radarr:/config
            - /var/host/movies:/movies
            - /var/host/downloads:/downloads
        ports:
            - 7878:7878
        restart: unless-stopped
        depends_on:
            - wait-for-config
            - wait-for-data

    emby:
        image: linuxserver/emby
        container_name: emby
        environment:
            - PUID=0
            - PGID=0
        volumes:
            - /etc/host/emby:/config
            - /var/host/tv:/data/tvshows
            - /var/host/movies:/data/movies
            - /var/host/transcode:/transcode #optional
        ports:
            - 8096:8096
            - 8920:8920 #optional
        devices:
            - /dev/dri:/dev/dri #optional
        restart: unless-stopped

    watchtower:
        container_name: watchtower
        restart: always
        image: v2tec/watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: --schedule "0 0 4 * * *" --cleanup
